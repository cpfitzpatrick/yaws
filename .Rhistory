par_unknown
# calculate gdp per capita and per square kilometer
sum(gecon_subsub$PPP2005_40)/sum(gecon_subsub$POPGPW_2005_40)
sum(gecon_subsub$PPP2005_40)/sum(as.numeric(gecon_subsub$AREA))
sum(gecon_subsub$MER2005_40)/sum(gecon_subsub$POPGPW_2005_40)
sum(gecon_subsub$MER2005_40)/sum(as.numeric(gecon_subsub$AREA))
sum(gecon_subsub$MER2005_40)
sum(gecon_subsub$MER2005_40)/sum(gecon_sub$MER2005_40)
# aggregate PAR by country
gecon_sub_byc<-aggregate(cbind(gecon_subsub$POPGPW_2005_40,gecon_subsub$PPP2005_40,gecon_subsub$AREA), by=list(gecon_subsub$COUNTRY), sum, na.rm=TRUE)
names(gecon_sub_byc)<-c("country","par","gdp","area")
gecon_sub_byc$par<-as.numeric(gecon_sub_byc$par)
# merge in iso3 codes
iso3<-read.csv(file="C:/Users/fitzpatrickc/Dropbox/yaws/data/iso3_list.csv", header=TRUE)
gecon_sub_byc<-merge(gecon_sub_byc,iso3,by="country")
gecon_sub_byc$year<-2005
# format PAR estimates for outsheet
yaw.par<-as.data.frame(cbind(as.character(gecon_sub_byc$country),as.character(gecon_sub_byc$iso3),gecon_sub_byc$year,round(gecon_sub_byc$par, digits=0),round(gecon_sub_byc$area, digits=0)))
names(yaw.par)<-c("country","iso3","year","par","area")
levels(yaw.par$par)
yaw.par$par<-as.numeric(as.character(yaw.par$par))
# adjust par to 2015 using rural population numbers
pop_rur<-read.csv(file="C:/Users/fitzpatrickc/Dropbox/yaws/data/pop_rur.csv", header=TRUE)
names(pop_rur)[names(pop_rur) == "unpop_name"] <- "country"
levels(pop_rur$country)[57] <- "Cote d'Ivoire"
pop_rur$pop_rur_gr<-as.numeric(pop_rur$X2015/pop_rur$X2005)
yaw.par<-merge(yaw.par, subset(pop_rur, select=c("country","pop_rur_gr")), by=c("country"))
yaw.par$par<-yaw.par$par*yaw.par$pop_rur_gr
yaw.par$year<-2015
sum(yaw.par$par)
# write to csv
write.csv(yaw.par, file="C:/Users/fitzpatrickc/Dropbox/yaws/yaw_par.csv", row.names = FALSE)
############## map population at risk using Google maps ##############################
parmap<-qmap(location="India",zoom=2,maptype = c("satellite"),color="color",source="google")
breaks<-as.vector(floor(quantile(gecon_subsub$POPGPW_2005_40,c(0.2,0.4,0.6,0.8,1.00))))
parmap + geom_point(aes(x=LONGITUDE, y=LAT, color=POPGPW_2005_40), data=gecon_subsub) + scale_colour_gradient(low="orange", high = "red", guide="legend", name="population at risk", breaks=breaks) + scale_y_continuous(limits = c(-45,45))
rm(breaks)
save(parmap, gecon_subsub, file="C:/Users/fitzpatrickc/Dropbox/investment/epi/yaw_par.RData")
############## map population at risk using NASA satellite image ##############################
img1 <- readPNG("D:/land_ocean_ice_2048.png")
img2 <- readTIFF("D:/land_shallow_topo_2048.tif")
img3 <- readJPEG("D:/land_shallow_topo_350.jpg")
g<-rasterGrob(img2)
ggplot(gecon_subsub, aes(x=LONGITUDE, y=LAT, color=POPGPW_2005_40)) +
annotation_custom(g, xmin=-180, xmax=180, ymin=-90, ymax=90) +
geom_point(size=1.2) + coord_cartesian(xlim = c(-180,180), ylim = c(-90,90)) +
scale_colour_gradient(low="yellow", high = "red", guide="legend", name="population at risk", breaks=breaks) +
scale_x_continuous("longitude") +
scale_y_continuous("latitude") +
theme(legend.justification=c(0,0), legend.position=c(0,0), text=element_text(size=11, family="serif"))
ggsave(filename = "C:/Users/fitzpatrickc/Dropbox/yaws/docs/final submission/figure_2.tiff", width=4*1.835, height=4, units="in",dpi = 300)
ggsave(filename = "C:/Users/fitzpatrickc/Dropbox/yaws/docs/final submission/figure_2.pdf", width=4*1.835, height=4, units="in",dpi = 300)
#############################import national population data###########################
# population by age
pop_by_age<-read.csv(file="C:/Users/fitzpatrickc/Dropbox/yaws/data/pop_by_age.csv", header=TRUE)
names(pop_by_age)[names(pop_by_age) == "unpop_name"] <- "country"
levels(pop_by_age$country)[49] <- "Cote d'Ivoire"
# use 2015 populations
pop_by_age<-pop_by_age[pop_by_age$year==2015,]
pop_by_age$pop_0_4<-rowSums(pop_by_age[,c("age_0","age_1","age_2","age_3","age_4")])
pop_by_age$pop_5_9<-rowSums(pop_by_age[,c("age_5","age_6","age_7","age_8","age_9")])
pop_by_age$pop_10_14<-rowSums(pop_by_age[,c("age_10","age_11","age_12","age_13","age_14")])
pop_by_age$pop_15_99<-rowSums(pop_by_age[,which(colnames(pop_by_age)=="age_15"):which(colnames(pop_by_age)=="age_80.")])
pop_by_age$pop_0_pc<-pop_by_age$age_0
pop_by_age<-pop_by_age[,c("country", "pop_0_4","pop_5_9","pop_10_14","pop_15_99","pop_0_pc")]
pop_by_age$pop_total<-pop_by_age$pop_0_4+pop_by_age$pop_5_9+pop_by_age$pop_10_14+pop_by_age$pop_15_99
# eligible population (more than 6 months)
pop_by_age$pop_elig<-1-(pop_by_age$pop_0_pc/2)/pop_by_age$pop_total
# merge and drop
yaw.pop<-merge(yaw.par, subset(pop_by_age, select=c("country","pop_0_4","pop_5_9","pop_10_14","pop_15_99","pop_total","pop_elig")), by=c("country"))
##################### import unit costs for mass drug administration #########
uc_mda_bmk<-read.csv(file="C:/Users/fitzpatrickc/Dropbox/yaws/data/mda_uc_yaw.csv")
##################### save image (data) for GitHub########################
save.image()
######################### housekeeping ################################
# Date: 26 August 2014
# By: Christopher Fitzpatrick, World Health Organizationes
# Description: compartmental (Markov) model and probabilistic sensitivity analysis to analyse cost-effectiveness of a global yaws eradication programme
# Terms of use: please write Christopher at fitzpatrickc@who.int
# R version: 3.0.2
######################### load packages #####################################
library(stats)
library(plyr)
library(reshape)
library(mvtnorm)
library(mc2d)
library(abind)
library(ggplot2)
library(ggthemes)
library(eha)
library(msm)
library(tkrplot)
library(rriskDistributions)
library(ggmap)
library(mapproj)
library(rgeos)
library(maptools)
library(raster)
library(rgdal)
library(reshape2)
library(plyr)
library(png)
library(tiff)
library(jpeg)
library(grid)
########################import epi data####################################
# endemicity status #
status<-read.csv(file="C:/Users/fitzpatrickc/Dropbox/yaws/data/yaws-verbose.csv")
status<-subset(status, select=c(YEAR..CODE.,COUNTRY..CODE.,COUNTRY..DISPLAY.,Display.Value))
# reported number of cases
cases<-read.csv(file="C:/Users/fitzpatrickc/Dropbox/yaws/data/yaws-verbose2.csv")
cases<-subset(cases, select=c(YEAR..CODE.,COUNTRY..CODE.,COUNTRY..DISPLAY.,Numeric))
#average number of cases per year
sum(cases$Numeric, na.rm=TRUE)
sum(cases$Numeric[cases$YEAR..CODE.==2012 | (cases$YEAR..CODE.==2008 & cases$COUNTRY..CODE.=="COD")], na.rm=T)
########################estimate population at risk##############################
# http://gecon.yale.edu/g-econ-project-yale-university-september-2009
gecon<-read.csv(file="C:/Users/fitzpatrickc/Dropbox/yaws/data/gecon.csv", header=TRUE, na.strings=c("#NA","#DIV/0"))
gecon$PPP2005_40<-as.numeric(as.character(gecon$PPP2005_40))*1000000000
gecon$MER2005_40<-as.numeric(as.character(gecon$MER2005_40))*1000000000
gecon$PPP2005_pp<-gecon$PPP2005_40/gecon$POPGPW_2005_40
gecon$MER2005_pp<-gecon$MER2005_40/gecon$POPGPW_2005_40
gecon$POPDEN_2005<-gecon$POPGPW_2005_40/as.numeric(as.character(gecon$AREA))
# correct country names
levels(gecon$COUNTRY)[levels(gecon$COUNTRY)=="Democratic Republic of Congo"] <- "Democratic Republic of the Congo"
levels(gecon$COUNTRY)[levels(gecon$COUNTRY)=="Bolivia"] <- "Bolivia (Plurinational State of)"
levels(gecon$COUNTRY)[levels(gecon$COUNTRY)=="Cook Is."] <- "Cook Islands"
levels(gecon$COUNTRY)[levels(gecon$COUNTRY)=="Guinea Bissau"] <- "Guinea-Bissau"
levels(gecon$COUNTRY)[levels(gecon$COUNTRY)=="Laos"] <- "Lao People's Democratic Republic"
levels(gecon$COUNTRY)[levels(gecon$COUNTRY)=="St. Lucia"] <- "Saint Lucia"
levels(gecon$COUNTRY)[levels(gecon$COUNTRY)=="St. Vincent and the Grenadines"] <- "Saint Vincent and the Grenadines"
levels(gecon$COUNTRY)[levels(gecon$COUNTRY)=="Tanzania"] <- "United Republic of Tanzania"
levels(gecon$COUNTRY)[levels(gecon$COUNTRY)=="Timor Leste"] <- "Timor-Leste"
levels(gecon$COUNTRY)[levels(gecon$COUNTRY)=="Venezuela"] <- "Venezuela (Bolivarian Republic of)"
levels(gecon$COUNTRY)[levels(gecon$COUNTRY)=="Vietnam"] <- "Viet Nam"
# calculate gdp per capita and per square kilometer
sum(gecon$PPP2005_40[which(gecon$POPGPW_2005_40>0)], na.rm=T)/sum(gecon$POPGPW_2005_40, na.rm=T)
sum(gecon$PPP2005_40[which(gecon$POPGPW_2005_40>0)], na.rm=T)/sum(as.numeric(gecon$AREA[which(gecon$POPGPW_2005_40>0)]))
sum(gecon$MER2005_40[which(gecon$POPGPW_2005_40>0)], na.rm=T)/sum(gecon$POPGPW_2005_40, na.rm=T)
sum(gecon$MER2005_40[which(gecon$POPGPW_2005_40>0)], na.rm=T)/sum(as.numeric(gecon$AREA[which(gecon$POPGPW_2005_40>0)]))
sum(gecon$MER2005_40)
# subset based on environmental and economic variables
# We include the entire populations of Solomon Islands and Vanuatu
list_bigsub<-as.list(subset(status, select="COUNTRY..DISPLAY.", Display.Value=="Currently endemic" | Display.Value=="Previously endemic (current status unknown)"))
gecon_bigsub<-subset(gecon, (lapply(COUNTRY, function (x) any(x %in% list_bigsub$COUNTRY..DISPLAY.))==TRUE & POPDEN_2005<100 & PREC_NEW>500 & TEMP_NEW>20 & (MATTVEG==1 | MATTVEG==2 | MATTVEG==7 | MATTVEG==9 | MATTVEG==15)) | COUNTRY=="Vanuatu" | COUNTRY=="Solomon Islands")
unique(gecon_bigsub$COUNTRY)
sum(gecon_bigsub$POPGPW_2005_40)
# PAR in countries of known endemicity
gecon_sub<-subset(gecon, COUNTRY=="Benin" | COUNTRY=="Cameroon" | COUNTRY=="Central African Republic" | COUNTRY=="Congo" | COUNTRY=="Cote d'Ivoire"| COUNTRY=="Democratic Republic of the Congo"| COUNTRY=="Ghana"| COUNTRY=="Indonesia"| COUNTRY=="Papua New Guinea"| COUNTRY=="Solomon Islands"| COUNTRY=="Togo"| COUNTRY=="Vanuatu")
sum(gecon_sub$PPP2005_40[which(gecon_sub$POPGPW_2005_40>0)], na.rm=T)/sum(gecon_sub$POPGPW_2005_40, na.rm=T)
sum(gecon_sub$PPP2005_40[which(gecon_sub$POPGPW_2005_40>0)], na.rm=T)/sum(as.numeric(gecon_sub$AREA[which(gecon_sub$POPGPW_2005_40>0)]))
sum(gecon_sub$MER2005_40[which(gecon_sub$POPGPW_2005_40>0)], na.rm=T)/sum(gecon_sub$POPGPW_2005_40, na.rm=T)
sum(gecon_sub$MER2005_40[which(gecon_sub$POPGPW_2005_40>0)], na.rm=T)/sum(as.numeric(gecon_sub$AREA[which(gecon_sub$POPGPW_2005_40>0)]))
sum(gecon_sub$MER2005_40)
gecon_subsub<-subset(gecon_sub, POPGPW_2005_40>0 & POPDEN_2005<100 & PREC_NEW>500 & TEMP_NEW>20 & (MATTVEG==1 | MATTVEG==2 | MATTVEG==7 | MATTVEG==9 | MATTVEG==15) | (COUNTRY=="Vanuatu" & POPGPW_2005_40>0) | (COUNTRY=="Solomon Islands" & POPGPW_2005_40>0))
sum(gecon_subsub$POPGPW_2005_40)
# limit also to Hackett (1951) latitudes and longitudes for DRC
gecon_subsub<-subset(gecon_subsub, COUNTRY!="Democratic Republic of the Congo" | (COUNTRY=="Democratic Republic of the Congo" & ((LAT<=2 & LAT>=-1 & LONGITUDE<=26)|(LAT<=2 & LAT>=-9 & LONGITUDE>=26))))
sum(gecon_subsub$POPGPW_2005_40)
# PAR in countries of unknown endemicity
par_unknown<-sum(gecon_bigsub$POPGPW_2005_40)-sum(gecon_subsub$POPGPW_2005_40)
par_unknown
# calculate gdp per capita and per square kilometer
sum(gecon_subsub$PPP2005_40)/sum(gecon_subsub$POPGPW_2005_40)
sum(gecon_subsub$PPP2005_40)/sum(as.numeric(gecon_subsub$AREA))
sum(gecon_subsub$MER2005_40)/sum(gecon_subsub$POPGPW_2005_40)
sum(gecon_subsub$MER2005_40)/sum(as.numeric(gecon_subsub$AREA))
sum(gecon_subsub$MER2005_40)
sum(gecon_subsub$MER2005_40)/sum(gecon_sub$MER2005_40)
# aggregate PAR by country
gecon_sub_byc<-aggregate(cbind(gecon_subsub$POPGPW_2005_40,gecon_subsub$PPP2005_40,gecon_subsub$AREA), by=list(gecon_subsub$COUNTRY), sum, na.rm=TRUE)
names(gecon_sub_byc)<-c("country","par","gdp","area")
gecon_sub_byc$par<-as.numeric(gecon_sub_byc$par)
# merge in iso3 codes
iso3<-read.csv(file="C:/Users/fitzpatrickc/Dropbox/yaws/data/iso3_list.csv", header=TRUE)
gecon_sub_byc<-merge(gecon_sub_byc,iso3,by="country")
gecon_sub_byc$year<-2005
# format PAR estimates for outsheet
yaw.par<-as.data.frame(cbind(as.character(gecon_sub_byc$country),as.character(gecon_sub_byc$iso3),gecon_sub_byc$year,round(gecon_sub_byc$par, digits=0),round(gecon_sub_byc$area, digits=0)))
names(yaw.par)<-c("country","iso3","year","par","area")
levels(yaw.par$par)
yaw.par$par<-as.numeric(as.character(yaw.par$par))
# adjust par to 2015 using rural population numbers
pop_rur<-read.csv(file="C:/Users/fitzpatrickc/Dropbox/yaws/data/pop_rur.csv", header=TRUE)
names(pop_rur)[names(pop_rur) == "unpop_name"] <- "country"
levels(pop_rur$country)[57] <- "Cote d'Ivoire"
pop_rur$pop_rur_gr<-as.numeric(pop_rur$X2015/pop_rur$X2005)
yaw.par<-merge(yaw.par, subset(pop_rur, select=c("country","pop_rur_gr")), by=c("country"))
yaw.par$par<-yaw.par$par*yaw.par$pop_rur_gr
yaw.par$year<-2015
sum(yaw.par$par)
# write to csv
write.csv(yaw.par, file="C:/Users/fitzpatrickc/Dropbox/yaws/yaw_par.csv", row.names = FALSE)
##################### import unit costs for mass drug administration #########
uc_mda_bmk<-read.csv(file="C:/Users/fitzpatrickc/Dropbox/yaws/data/mda_uc_yaw.csv")
##################### save image (data) for GitHub########################
save.image()
parmap<-qmap(location="India",zoom=2,maptype = c("satellite"),color="color",source="google")
breaks<-as.vector(floor(quantile(gecon_subsub$POPGPW_2005_40,c(0.2,0.4,0.6,0.8,1.00))))
parmap + geom_point(aes(x=LONGITUDE, y=LAT, color=POPGPW_2005_40), data=gecon_subsub) + scale_colour_gradient(low="orange", high = "red", guide="legend", name="population at risk", breaks=breaks) + scale_y_continuous(limits = c(-45,45))
rm(breaks)
save(parmap, gecon_subsub, file="C:/Users/fitzpatrickc/Dropbox/investment/epi/yaw_par.RData")
############## map population at risk using NASA satellite image ##############################
img2 <- readTIFF("land_shallow_topo_2048.tif")
g<-rasterGrob(img2)
ggplot(gecon_subsub, aes(x=LONGITUDE, y=LAT, color=POPGPW_2005_40)) +
annotation_custom(g, xmin=-180, xmax=180, ymin=-90, ymax=90) +
geom_point(size=1.2) + coord_cartesian(xlim = c(-180,180), ylim = c(-90,90)) +
scale_colour_gradient(low="yellow", high = "red", guide="legend", name="population at risk", breaks=breaks) +
scale_x_continuous("longitude") +
scale_y_continuous("latitude") +
theme(legend.justification=c(0,0), legend.position=c(0,0), text=element_text(size=11, family="serif"))
ggsave(filename = "C:/Users/fitzpatrickc/Dropbox/yaws/docs/final submission/figure_2.tiff", width=4*1.835, height=4, units="in",dpi = 300)
ggsave(filename = "C:/Users/fitzpatrickc/Dropbox/yaws/docs/final submission/figure_2.pdf", width=4*1.835, height=4, units="in",dpi = 300)
######################### housekeeping ################################
# Date: 26 August 2014
# By: Christopher Fitzpatrick, World Health Organizationes
# Description: compartmental (Markov) model and probabilistic sensitivity analysis to analyse cost-effectiveness of a global yaws eradication programme
# Terms of use: please write Christopher at fitzpatrickc@who.int
# R version: 3.0.2
######################### load packages #####################################
library(stats)
library(plyr)
library(reshape)
library(mvtnorm)
library(mc2d)
library(abind)
library(ggplot2)
library(ggthemes)
library(eha)
library(msm)
library(tkrplot)
library(rriskDistributions)
library(ggmap)
library(mapproj)
library(rgeos)
library(maptools)
library(raster)
library(rgdal)
library(reshape2)
library(plyr)
library(png)
library(tiff)
library(jpeg)
library(grid)
########################import epi data####################################
# endemicity status #
status<-read.csv(file="C:/Users/fitzpatrickc/Dropbox/yaws/data/yaws-verbose.csv")
status<-subset(status, select=c(YEAR..CODE.,COUNTRY..CODE.,COUNTRY..DISPLAY.,Display.Value))
# reported number of cases
cases<-read.csv(file="C:/Users/fitzpatrickc/Dropbox/yaws/data/yaws-verbose2.csv")
cases<-subset(cases, select=c(YEAR..CODE.,COUNTRY..CODE.,COUNTRY..DISPLAY.,Numeric))
#average number of cases per year
sum(cases$Numeric, na.rm=TRUE)
sum(cases$Numeric[cases$YEAR..CODE.==2012 | (cases$YEAR..CODE.==2008 & cases$COUNTRY..CODE.=="COD")], na.rm=T)
########################estimate population at risk##############################
# http://gecon.yale.edu/g-econ-project-yale-university-september-2009
gecon<-read.csv(file="C:/Users/fitzpatrickc/Dropbox/yaws/data/gecon.csv", header=TRUE, na.strings=c("#NA","#DIV/0"))
gecon$PPP2005_40<-as.numeric(as.character(gecon$PPP2005_40))*1000000000
gecon$MER2005_40<-as.numeric(as.character(gecon$MER2005_40))*1000000000
gecon$PPP2005_pp<-gecon$PPP2005_40/gecon$POPGPW_2005_40
gecon$MER2005_pp<-gecon$MER2005_40/gecon$POPGPW_2005_40
gecon$POPDEN_2005<-gecon$POPGPW_2005_40/as.numeric(as.character(gecon$AREA))
# correct country names
levels(gecon$COUNTRY)[levels(gecon$COUNTRY)=="Democratic Republic of Congo"] <- "Democratic Republic of the Congo"
levels(gecon$COUNTRY)[levels(gecon$COUNTRY)=="Bolivia"] <- "Bolivia (Plurinational State of)"
levels(gecon$COUNTRY)[levels(gecon$COUNTRY)=="Cook Is."] <- "Cook Islands"
levels(gecon$COUNTRY)[levels(gecon$COUNTRY)=="Guinea Bissau"] <- "Guinea-Bissau"
levels(gecon$COUNTRY)[levels(gecon$COUNTRY)=="Laos"] <- "Lao People's Democratic Republic"
levels(gecon$COUNTRY)[levels(gecon$COUNTRY)=="St. Lucia"] <- "Saint Lucia"
levels(gecon$COUNTRY)[levels(gecon$COUNTRY)=="St. Vincent and the Grenadines"] <- "Saint Vincent and the Grenadines"
levels(gecon$COUNTRY)[levels(gecon$COUNTRY)=="Tanzania"] <- "United Republic of Tanzania"
levels(gecon$COUNTRY)[levels(gecon$COUNTRY)=="Timor Leste"] <- "Timor-Leste"
levels(gecon$COUNTRY)[levels(gecon$COUNTRY)=="Venezuela"] <- "Venezuela (Bolivarian Republic of)"
levels(gecon$COUNTRY)[levels(gecon$COUNTRY)=="Vietnam"] <- "Viet Nam"
# calculate gdp per capita and per square kilometer
sum(gecon$PPP2005_40[which(gecon$POPGPW_2005_40>0)], na.rm=T)/sum(gecon$POPGPW_2005_40, na.rm=T)
sum(gecon$PPP2005_40[which(gecon$POPGPW_2005_40>0)], na.rm=T)/sum(as.numeric(gecon$AREA[which(gecon$POPGPW_2005_40>0)]))
sum(gecon$MER2005_40[which(gecon$POPGPW_2005_40>0)], na.rm=T)/sum(gecon$POPGPW_2005_40, na.rm=T)
sum(gecon$MER2005_40[which(gecon$POPGPW_2005_40>0)], na.rm=T)/sum(as.numeric(gecon$AREA[which(gecon$POPGPW_2005_40>0)]))
sum(gecon$MER2005_40)
# subset based on environmental and economic variables
# We include the entire populations of Solomon Islands and Vanuatu
list_bigsub<-as.list(subset(status, select="COUNTRY..DISPLAY.", Display.Value=="Currently endemic" | Display.Value=="Previously endemic (current status unknown)"))
gecon_bigsub<-subset(gecon, (lapply(COUNTRY, function (x) any(x %in% list_bigsub$COUNTRY..DISPLAY.))==TRUE & POPDEN_2005<100 & PREC_NEW>500 & TEMP_NEW>20 & (MATTVEG==1 | MATTVEG==2 | MATTVEG==7 | MATTVEG==9 | MATTVEG==15)) | COUNTRY=="Vanuatu" | COUNTRY=="Solomon Islands")
unique(gecon_bigsub$COUNTRY)
sum(gecon_bigsub$POPGPW_2005_40)
# PAR in countries of known endemicity
gecon_sub<-subset(gecon, COUNTRY=="Benin" | COUNTRY=="Cameroon" | COUNTRY=="Central African Republic" | COUNTRY=="Congo" | COUNTRY=="Cote d'Ivoire"| COUNTRY=="Democratic Republic of the Congo"| COUNTRY=="Ghana"| COUNTRY=="Indonesia"| COUNTRY=="Papua New Guinea"| COUNTRY=="Solomon Islands"| COUNTRY=="Togo"| COUNTRY=="Vanuatu")
sum(gecon_sub$PPP2005_40[which(gecon_sub$POPGPW_2005_40>0)], na.rm=T)/sum(gecon_sub$POPGPW_2005_40, na.rm=T)
sum(gecon_sub$PPP2005_40[which(gecon_sub$POPGPW_2005_40>0)], na.rm=T)/sum(as.numeric(gecon_sub$AREA[which(gecon_sub$POPGPW_2005_40>0)]))
sum(gecon_sub$MER2005_40[which(gecon_sub$POPGPW_2005_40>0)], na.rm=T)/sum(gecon_sub$POPGPW_2005_40, na.rm=T)
sum(gecon_sub$MER2005_40[which(gecon_sub$POPGPW_2005_40>0)], na.rm=T)/sum(as.numeric(gecon_sub$AREA[which(gecon_sub$POPGPW_2005_40>0)]))
sum(gecon_sub$MER2005_40)
gecon_subsub<-subset(gecon_sub, POPGPW_2005_40>0 & POPDEN_2005<100 & PREC_NEW>500 & TEMP_NEW>20 & (MATTVEG==1 | MATTVEG==2 | MATTVEG==7 | MATTVEG==9 | MATTVEG==15) | (COUNTRY=="Vanuatu" & POPGPW_2005_40>0) | (COUNTRY=="Solomon Islands" & POPGPW_2005_40>0))
sum(gecon_subsub$POPGPW_2005_40)
# limit also to Hackett (1951) latitudes and longitudes for DRC
gecon_subsub<-subset(gecon_subsub, COUNTRY!="Democratic Republic of the Congo" | (COUNTRY=="Democratic Republic of the Congo" & ((LAT<=2 & LAT>=-1 & LONGITUDE<=26)|(LAT<=2 & LAT>=-9 & LONGITUDE>=26))))
sum(gecon_subsub$POPGPW_2005_40)
# PAR in countries of unknown endemicity
par_unknown<-sum(gecon_bigsub$POPGPW_2005_40)-sum(gecon_subsub$POPGPW_2005_40)
par_unknown
# calculate gdp per capita and per square kilometer
sum(gecon_subsub$PPP2005_40)/sum(gecon_subsub$POPGPW_2005_40)
sum(gecon_subsub$PPP2005_40)/sum(as.numeric(gecon_subsub$AREA))
sum(gecon_subsub$MER2005_40)/sum(gecon_subsub$POPGPW_2005_40)
sum(gecon_subsub$MER2005_40)/sum(as.numeric(gecon_subsub$AREA))
sum(gecon_subsub$MER2005_40)
sum(gecon_subsub$MER2005_40)/sum(gecon_sub$MER2005_40)
# aggregate PAR by country
gecon_sub_byc<-aggregate(cbind(gecon_subsub$POPGPW_2005_40,gecon_subsub$PPP2005_40,gecon_subsub$AREA), by=list(gecon_subsub$COUNTRY), sum, na.rm=TRUE)
names(gecon_sub_byc)<-c("country","par","gdp","area")
gecon_sub_byc$par<-as.numeric(gecon_sub_byc$par)
# merge in iso3 codes
iso3<-read.csv(file="C:/Users/fitzpatrickc/Dropbox/yaws/data/iso3_list.csv", header=TRUE)
gecon_sub_byc<-merge(gecon_sub_byc,iso3,by="country")
gecon_sub_byc$year<-2005
# format PAR estimates for outsheet
yaw.par<-as.data.frame(cbind(as.character(gecon_sub_byc$country),as.character(gecon_sub_byc$iso3),gecon_sub_byc$year,round(gecon_sub_byc$par, digits=0),round(gecon_sub_byc$area, digits=0)))
names(yaw.par)<-c("country","iso3","year","par","area")
levels(yaw.par$par)
yaw.par$par<-as.numeric(as.character(yaw.par$par))
# adjust par to 2015 using rural population numbers
pop_rur<-read.csv(file="C:/Users/fitzpatrickc/Dropbox/yaws/data/pop_rur.csv", header=TRUE)
names(pop_rur)[names(pop_rur) == "unpop_name"] <- "country"
levels(pop_rur$country)[57] <- "Cote d'Ivoire"
pop_rur$pop_rur_gr<-as.numeric(pop_rur$X2015/pop_rur$X2005)
yaw.par<-merge(yaw.par, subset(pop_rur, select=c("country","pop_rur_gr")), by=c("country"))
yaw.par$par<-yaw.par$par*yaw.par$pop_rur_gr
yaw.par$year<-2015
sum(yaw.par$par)
# write to csv
write.csv(yaw.par, file="C:/Users/fitzpatrickc/Dropbox/yaws/yaw_par.csv", row.names = FALSE)
##################### import unit costs for mass drug administration #########
uc_mda_bmk<-read.csv(file="C:/Users/fitzpatrickc/Dropbox/yaws/data/mda_uc_yaw.csv")
#############################import national population data###########################
# population by age
pop_by_age<-read.csv(file="C:/Users/fitzpatrickc/Dropbox/yaws/data/pop_by_age.csv", header=TRUE)
names(pop_by_age)[names(pop_by_age) == "unpop_name"] <- "country"
levels(pop_by_age$country)[49] <- "Cote d'Ivoire"
# use 2015 populations
pop_by_age<-pop_by_age[pop_by_age$year==2015,]
pop_by_age$pop_0_4<-rowSums(pop_by_age[,c("age_0","age_1","age_2","age_3","age_4")])
pop_by_age$pop_5_9<-rowSums(pop_by_age[,c("age_5","age_6","age_7","age_8","age_9")])
pop_by_age$pop_10_14<-rowSums(pop_by_age[,c("age_10","age_11","age_12","age_13","age_14")])
pop_by_age$pop_15_99<-rowSums(pop_by_age[,which(colnames(pop_by_age)=="age_15"):which(colnames(pop_by_age)=="age_80.")])
pop_by_age$pop_0_pc<-pop_by_age$age_0
pop_by_age<-pop_by_age[,c("country", "pop_0_4","pop_5_9","pop_10_14","pop_15_99","pop_0_pc")]
pop_by_age$pop_total<-pop_by_age$pop_0_4+pop_by_age$pop_5_9+pop_by_age$pop_10_14+pop_by_age$pop_15_99
# eligible population (more than 6 months)
pop_by_age$pop_elig<-1-(pop_by_age$pop_0_pc/2)/pop_by_age$pop_total
# merge and drop
yaw.pop<-merge(yaw.par, subset(pop_by_age, select=c("country","pop_0_4","pop_5_9","pop_10_14","pop_15_99","pop_total","pop_elig")), by=c("country"))
##################### save image (data) for GitHub########################
save.image()
parmap<-qmap(location="India",zoom=2,maptype = c("satellite"),color="color",source="google")
breaks<-as.vector(floor(quantile(gecon_subsub$POPGPW_2005_40,c(0.2,0.4,0.6,0.8,1.00))))
parmap + geom_point(aes(x=LONGITUDE, y=LAT, color=POPGPW_2005_40), data=gecon_subsub) + scale_colour_gradient(low="orange", high = "red", guide="legend", name="population at risk", breaks=breaks) + scale_y_continuous(limits = c(-45,45))
save(parmap, gecon_subsub, file="C:/Users/fitzpatrickc/Dropbox/investment/epi/yaw_par.RData")
############## map population at risk using NASA satellite image ##############################
img2 <- readTIFF("land_shallow_topo_2048.tif")
g<-rasterGrob(img2)
ggplot(gecon_subsub, aes(x=LONGITUDE, y=LAT, color=POPGPW_2005_40)) +
annotation_custom(g, xmin=-180, xmax=180, ymin=-90, ymax=90) +
geom_point(size=1.2) + coord_cartesian(xlim = c(-180,180), ylim = c(-90,90)) +
scale_colour_gradient(low="yellow", high = "red", guide="legend", name="population at risk", breaks=breaks) +
scale_x_continuous("longitude") +
scale_y_continuous("latitude") +
theme(legend.justification=c(0,0), legend.position=c(0,0), text=element_text(size=11, family="serif"))
ggsave(filename = "C:/Users/fitzpatrickc/Dropbox/yaws/docs/final submission/figure_2.tiff", width=4*1.835, height=4, units="in",dpi = 300)
ggsave(filename = "C:/Users/fitzpatrickc/Dropbox/yaws/docs/final submission/figure_2.pdf", width=4*1.835, height=4, units="in",dpi = 300)
######################### housekeeping ################################
# Date: 26 August 2014
# By: Christopher Fitzpatrick, World Health Organizationes
# Description: compartmental (Markov) model and probabilistic sensitivity analysis to analyse cost-effectiveness of a global yaws eradication programme
# Terms of use: please write Christopher at fitzpatrickc@who.int
# R version: 3.0.2
######################### load packages #####################################
library(stats)
library(plyr)
library(reshape)
library(mvtnorm)
library(mc2d)
library(abind)
library(ggplot2)
library(ggthemes)
library(eha)
library(msm)
library(tkrplot)
library(rriskDistributions)
library(ggmap)
library(mapproj)
library(rgeos)
library(maptools)
library(raster)
library(rgdal)
library(reshape2)
library(plyr)
library(png)
library(tiff)
library(jpeg)
library(grid)
########################import epi data####################################
# endemicity status #
status<-read.csv(file="C:/Users/fitzpatrickc/Dropbox/yaws/data/yaws-verbose.csv")
status<-subset(status, select=c(YEAR..CODE.,COUNTRY..CODE.,COUNTRY..DISPLAY.,Display.Value))
# reported number of cases
cases<-read.csv(file="C:/Users/fitzpatrickc/Dropbox/yaws/data/yaws-verbose2.csv")
cases<-subset(cases, select=c(YEAR..CODE.,COUNTRY..CODE.,COUNTRY..DISPLAY.,Numeric))
#average number of cases per year
sum(cases$Numeric, na.rm=TRUE)
sum(cases$Numeric[cases$YEAR..CODE.==2012 | (cases$YEAR..CODE.==2008 & cases$COUNTRY..CODE.=="COD")], na.rm=T)
########################estimate population at risk##############################
# http://gecon.yale.edu/g-econ-project-yale-university-september-2009
gecon<-read.csv(file="C:/Users/fitzpatrickc/Dropbox/yaws/data/gecon.csv", header=TRUE, na.strings=c("#NA","#DIV/0"))
gecon$PPP2005_40<-as.numeric(as.character(gecon$PPP2005_40))*1000000000
gecon$MER2005_40<-as.numeric(as.character(gecon$MER2005_40))*1000000000
gecon$PPP2005_pp<-gecon$PPP2005_40/gecon$POPGPW_2005_40
gecon$MER2005_pp<-gecon$MER2005_40/gecon$POPGPW_2005_40
gecon$POPDEN_2005<-gecon$POPGPW_2005_40/as.numeric(as.character(gecon$AREA))
# correct country names
levels(gecon$COUNTRY)[levels(gecon$COUNTRY)=="Democratic Republic of Congo"] <- "Democratic Republic of the Congo"
levels(gecon$COUNTRY)[levels(gecon$COUNTRY)=="Bolivia"] <- "Bolivia (Plurinational State of)"
levels(gecon$COUNTRY)[levels(gecon$COUNTRY)=="Cook Is."] <- "Cook Islands"
levels(gecon$COUNTRY)[levels(gecon$COUNTRY)=="Guinea Bissau"] <- "Guinea-Bissau"
levels(gecon$COUNTRY)[levels(gecon$COUNTRY)=="Laos"] <- "Lao People's Democratic Republic"
levels(gecon$COUNTRY)[levels(gecon$COUNTRY)=="St. Lucia"] <- "Saint Lucia"
levels(gecon$COUNTRY)[levels(gecon$COUNTRY)=="St. Vincent and the Grenadines"] <- "Saint Vincent and the Grenadines"
levels(gecon$COUNTRY)[levels(gecon$COUNTRY)=="Tanzania"] <- "United Republic of Tanzania"
levels(gecon$COUNTRY)[levels(gecon$COUNTRY)=="Timor Leste"] <- "Timor-Leste"
levels(gecon$COUNTRY)[levels(gecon$COUNTRY)=="Venezuela"] <- "Venezuela (Bolivarian Republic of)"
levels(gecon$COUNTRY)[levels(gecon$COUNTRY)=="Vietnam"] <- "Viet Nam"
# calculate gdp per capita and per square kilometer
sum(gecon$PPP2005_40[which(gecon$POPGPW_2005_40>0)], na.rm=T)/sum(gecon$POPGPW_2005_40, na.rm=T)
sum(gecon$PPP2005_40[which(gecon$POPGPW_2005_40>0)], na.rm=T)/sum(as.numeric(gecon$AREA[which(gecon$POPGPW_2005_40>0)]))
sum(gecon$MER2005_40[which(gecon$POPGPW_2005_40>0)], na.rm=T)/sum(gecon$POPGPW_2005_40, na.rm=T)
sum(gecon$MER2005_40[which(gecon$POPGPW_2005_40>0)], na.rm=T)/sum(as.numeric(gecon$AREA[which(gecon$POPGPW_2005_40>0)]))
sum(gecon$MER2005_40)
# subset based on environmental and economic variables
# We include the entire populations of Solomon Islands and Vanuatu
list_bigsub<-as.list(subset(status, select="COUNTRY..DISPLAY.", Display.Value=="Currently endemic" | Display.Value=="Previously endemic (current status unknown)"))
gecon_bigsub<-subset(gecon, (lapply(COUNTRY, function (x) any(x %in% list_bigsub$COUNTRY..DISPLAY.))==TRUE & POPDEN_2005<100 & PREC_NEW>500 & TEMP_NEW>20 & (MATTVEG==1 | MATTVEG==2 | MATTVEG==7 | MATTVEG==9 | MATTVEG==15)) | COUNTRY=="Vanuatu" | COUNTRY=="Solomon Islands")
unique(gecon_bigsub$COUNTRY)
sum(gecon_bigsub$POPGPW_2005_40)
# PAR in countries of known endemicity
gecon_sub<-subset(gecon, COUNTRY=="Benin" | COUNTRY=="Cameroon" | COUNTRY=="Central African Republic" | COUNTRY=="Congo" | COUNTRY=="Cote d'Ivoire"| COUNTRY=="Democratic Republic of the Congo"| COUNTRY=="Ghana"| COUNTRY=="Indonesia"| COUNTRY=="Papua New Guinea"| COUNTRY=="Solomon Islands"| COUNTRY=="Togo"| COUNTRY=="Vanuatu")
sum(gecon_sub$PPP2005_40[which(gecon_sub$POPGPW_2005_40>0)], na.rm=T)/sum(gecon_sub$POPGPW_2005_40, na.rm=T)
sum(gecon_sub$PPP2005_40[which(gecon_sub$POPGPW_2005_40>0)], na.rm=T)/sum(as.numeric(gecon_sub$AREA[which(gecon_sub$POPGPW_2005_40>0)]))
sum(gecon_sub$MER2005_40[which(gecon_sub$POPGPW_2005_40>0)], na.rm=T)/sum(gecon_sub$POPGPW_2005_40, na.rm=T)
sum(gecon_sub$MER2005_40[which(gecon_sub$POPGPW_2005_40>0)], na.rm=T)/sum(as.numeric(gecon_sub$AREA[which(gecon_sub$POPGPW_2005_40>0)]))
sum(gecon_sub$MER2005_40)
gecon_subsub<-subset(gecon_sub, POPGPW_2005_40>0 & POPDEN_2005<100 & PREC_NEW>500 & TEMP_NEW>20 & (MATTVEG==1 | MATTVEG==2 | MATTVEG==7 | MATTVEG==9 | MATTVEG==15) | (COUNTRY=="Vanuatu" & POPGPW_2005_40>0) | (COUNTRY=="Solomon Islands" & POPGPW_2005_40>0))
sum(gecon_subsub$POPGPW_2005_40)
# limit also to Hackett (1951) latitudes and longitudes for DRC
gecon_subsub<-subset(gecon_subsub, COUNTRY!="Democratic Republic of the Congo" | (COUNTRY=="Democratic Republic of the Congo" & ((LAT<=2 & LAT>=-1 & LONGITUDE<=26)|(LAT<=2 & LAT>=-9 & LONGITUDE>=26))))
sum(gecon_subsub$POPGPW_2005_40)
# PAR in countries of unknown endemicity
par_unknown<-sum(gecon_bigsub$POPGPW_2005_40)-sum(gecon_subsub$POPGPW_2005_40)
par_unknown
# calculate gdp per capita and per square kilometer
sum(gecon_subsub$PPP2005_40)/sum(gecon_subsub$POPGPW_2005_40)
sum(gecon_subsub$PPP2005_40)/sum(as.numeric(gecon_subsub$AREA))
sum(gecon_subsub$MER2005_40)/sum(gecon_subsub$POPGPW_2005_40)
sum(gecon_subsub$MER2005_40)/sum(as.numeric(gecon_subsub$AREA))
sum(gecon_subsub$MER2005_40)
sum(gecon_subsub$MER2005_40)/sum(gecon_sub$MER2005_40)
# aggregate PAR by country
gecon_sub_byc<-aggregate(cbind(gecon_subsub$POPGPW_2005_40,gecon_subsub$PPP2005_40,gecon_subsub$AREA), by=list(gecon_subsub$COUNTRY), sum, na.rm=TRUE)
names(gecon_sub_byc)<-c("country","par","gdp","area")
gecon_sub_byc$par<-as.numeric(gecon_sub_byc$par)
# merge in iso3 codes
iso3<-read.csv(file="C:/Users/fitzpatrickc/Dropbox/yaws/data/iso3_list.csv", header=TRUE)
gecon_sub_byc<-merge(gecon_sub_byc,iso3,by="country")
gecon_sub_byc$year<-2005
# format PAR estimates for outsheet
yaw.par<-as.data.frame(cbind(as.character(gecon_sub_byc$country),as.character(gecon_sub_byc$iso3),gecon_sub_byc$year,round(gecon_sub_byc$par, digits=0),round(gecon_sub_byc$area, digits=0)))
names(yaw.par)<-c("country","iso3","year","par","area")
levels(yaw.par$par)
yaw.par$par<-as.numeric(as.character(yaw.par$par))
# adjust par to 2015 using rural population numbers
pop_rur<-read.csv(file="C:/Users/fitzpatrickc/Dropbox/yaws/data/pop_rur.csv", header=TRUE)
names(pop_rur)[names(pop_rur) == "unpop_name"] <- "country"
levels(pop_rur$country)[57] <- "Cote d'Ivoire"
pop_rur$pop_rur_gr<-as.numeric(pop_rur$X2015/pop_rur$X2005)
yaw.par<-merge(yaw.par, subset(pop_rur, select=c("country","pop_rur_gr")), by=c("country"))
yaw.par$par<-yaw.par$par*yaw.par$pop_rur_gr
yaw.par$year<-2015
sum(yaw.par$par)
# write to csv
write.csv(yaw.par, file="C:/Users/fitzpatrickc/Dropbox/yaws/yaw_par.csv", row.names = FALSE)
##################### import unit costs for mass drug administration #########
uc_mda_bmk<-read.csv(file="C:/Users/fitzpatrickc/Dropbox/yaws/data/mda_uc_yaw.csv")
#############################import national population data###########################
# population by age
pop_by_age<-read.csv(file="C:/Users/fitzpatrickc/Dropbox/yaws/data/pop_by_age.csv", header=TRUE)
names(pop_by_age)[names(pop_by_age) == "unpop_name"] <- "country"
levels(pop_by_age$country)[49] <- "Cote d'Ivoire"
# use 2015 populations
pop_by_age<-pop_by_age[pop_by_age$year==2015,]
pop_by_age$pop_0_4<-rowSums(pop_by_age[,c("age_0","age_1","age_2","age_3","age_4")])
pop_by_age$pop_5_9<-rowSums(pop_by_age[,c("age_5","age_6","age_7","age_8","age_9")])
pop_by_age$pop_10_14<-rowSums(pop_by_age[,c("age_10","age_11","age_12","age_13","age_14")])
pop_by_age$pop_15_99<-rowSums(pop_by_age[,which(colnames(pop_by_age)=="age_15"):which(colnames(pop_by_age)=="age_80.")])
pop_by_age$pop_0_pc<-pop_by_age$age_0
pop_by_age<-pop_by_age[,c("country", "pop_0_4","pop_5_9","pop_10_14","pop_15_99","pop_0_pc")]
pop_by_age$pop_total<-pop_by_age$pop_0_4+pop_by_age$pop_5_9+pop_by_age$pop_10_14+pop_by_age$pop_15_99
# eligible population (more than 6 months)
pop_by_age$pop_elig<-1-(pop_by_age$pop_0_pc/2)/pop_by_age$pop_total
# merge and drop
yaw.pop<-merge(yaw.par, subset(pop_by_age, select=c("country","pop_0_4","pop_5_9","pop_10_14","pop_15_99","pop_total","pop_elig")), by=c("country"))
##################### save image (data) for GitHub########################
save.image()
